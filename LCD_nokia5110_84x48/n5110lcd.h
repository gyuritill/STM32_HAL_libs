/*
 * n5110lcd.h
 *
 *  Created on: Nov 27, 2021
 *      Author: Gy√∂rgy
 */

#ifndef INC_N5110LCD_H_
#define INC_N5110LCD_H_
#if defined (STM32F103xB)
#include "stm32f1xx_hal.h" /* needed for GPIO */
#elif defined (STM32F411xE)
#include "stm32f4xx_hal.h" /* needed for GPIO */
#elif defined (STM32L476xx)
#include "stm32l4xx_hal.h" /* needed for GPIO */
#elif defined (STM32G474xx)
#include "stm32g4xx_hal.h" /* needed for GPIO */
#endif

/* defines */
#define LCD_WIDTH			84
#define LCD_HEIGHT			(48 / 8)
#define LCD_SIZE			(LCD_WIDTH * LCD_HEIGHT)
#define ASCII_START			0x20
#define FONT_WIDTH			6
#define	NORMAL_GRAPHIC		0
#define	INVERTED_GRAPHIC	1
#define	NORMAL_TEXT			0
#define	INVERTED_TEXT		1
#define CMD_FUNCTION_SET	0x20
#define CMD_DISPLAY_CONTROL	0x08
#define CMD_SET_Y_ADDRESS	0x40
#define CMD_SET_X_ADDRESS	0x80
#define CMDX_TEMP_CONTROL	0x04
#define CMDX_BIAS_SYSTEM	0x10
#define CMDX_SET_VOP		0x80
#define CMD_FUNCTION_BIT_PD	2
#define CMD_FUNCTION_BIT_V	1
#define CMD_FUNCTION_BIT_H	0
#define CMD_DISPLAY_D		2
#define CMD_DISPLAY_E		0
#define CMDX_TC0_1MV_PER_K	0x00
#define CMDX_TC1_9MV_PER_K	0x01
#define CMDX_TC2_17MV_PER_K	0x02
#define CMDX_TC3_24MV_PER_K	0x03
#define CMDX_BS7_1_TO_100	0x00
#define CMDX_BS6_1_TO_80	0x01
#define CMDX_BS5_1_TO_65	0x02
#define CMDX_BS4_1_TO_48	0x03
#define CMDX_BS3_1_TO_40	0x04
#define CMDX_BS2_1_TO_24	0x05
#define CMDX_BS1_1_TO_18	0x06
#define CMDX_BS0_1_TO_10	0x07


/*
 * DEVICE STRUCT
 */
typedef struct N5110LCD{
	GPIO_TypeDef *sce_Port;		// nChipEnable
	uint16_t sce_Pin;
	GPIO_TypeDef *rst_Port;		// nReset
	uint16_t rst_Pin;
	GPIO_TypeDef *dc_Port;		// data(1) / command(0)
	uint16_t dc_Pin;
	GPIO_TypeDef *din_Port;		// serial data in
	uint16_t din_Pin;
	GPIO_TypeDef *sclk_Port;	// serial clock
	uint16_t sclk_Pin;
	GPIO_TypeDef *led_Port;	// serial clock
	uint16_t led_Pin;

	uint8_t	graphicMode;		// 0: all off, 1: all on, 4: normal, 5: inverted
	uint8_t	textMode;			// 0: normal, 1: inverted
	uint8_t posX;				// horizontal position
	uint8_t posY;				// vertical position
} N5110LCD_DEVICE;

/*
 * Initialisation
 */
void N5110_Init_GPIO(N5110LCD_DEVICE *dev, GPIO_TypeDef *sce_Port, uint16_t sce_Pin, GPIO_TypeDef *rst_Port, uint16_t rst_Pin, GPIO_TypeDef *dc_Port,
	uint16_t dc_Pin, GPIO_TypeDef *din_Port, uint16_t din_Pin, GPIO_TypeDef *sclk_Port, uint16_t sclk_Pin, GPIO_TypeDef *led, uint16_t led_Pin);

/*
 * High-level functions
 */
void N5110_switchOnScreen(N5110LCD_DEVICE *dev);
void N5110_switchOffScreen(N5110LCD_DEVICE *dev);
void N5110_positiveScreen(N5110LCD_DEVICE *dev);
void N5110_negativeScreen(N5110LCD_DEVICE *dev);
void N5110_positiveText(N5110LCD_DEVICE *dev);
void N5110_negativeText(N5110LCD_DEVICE *dev);
void N5110_putChar(N5110LCD_DEVICE *dev, char ch);
void N5110_print(N5110LCD_DEVICE *dev, char *str);
void N5110_setPos(N5110LCD_DEVICE *dev, uint8_t x, uint8_t y);
void N5110_clearScreen(N5110LCD_DEVICE *dev);
void N5110_backlightOn(N5110LCD_DEVICE *dev);
void N5110_backlightOff(N5110LCD_DEVICE *dev);

/*
 * Low-level functions
 */
void N5110_writeCommand(N5110LCD_DEVICE *dev, uint8_t command);
void N5110_writeData(N5110LCD_DEVICE *dev, uint8_t data);

static const uint8_t ASCII[][FONT_WIDTH] = {
 {0x00, 0x00, 0x00, 0x00, 0x00, 0x00} // 20
,{0x00, 0x00, 0x00, 0x5f, 0x00, 0x00} // 21 !
,{0x00, 0x00, 0x07, 0x00, 0x07, 0x00} // 22 "
,{0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14} // 23 #
,{0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12} // 24 $
,{0x00, 0x23, 0x13, 0x08, 0x64, 0x62} // 25 %
,{0x00, 0x36, 0x49, 0x55, 0x22, 0x50} // 26 &
,{0x00, 0x00, 0x05, 0x03, 0x00, 0x00} // 27 '
,{0x00, 0x00, 0x1c, 0x22, 0x41, 0x00} // 28 (
,{0x00, 0x00, 0x41, 0x22, 0x1c, 0x00} // 29 )
,{0x00, 0x14, 0x08, 0x3e, 0x08, 0x14} // 2a *
,{0x00, 0x08, 0x08, 0x3e, 0x08, 0x08} // 2b +
,{0x00, 0x00, 0x50, 0x30, 0x00, 0x00} // 2c ,
,{0x00, 0x08, 0x08, 0x08, 0x08, 0x08} // 2d -
,{0x00, 0x00, 0x60, 0x60, 0x00, 0x00} // 2e .
,{0x00, 0x20, 0x10, 0x08, 0x04, 0x02} // 2f /
,{0x00, 0x3e, 0x51, 0x49, 0x45, 0x3e} // 30 0
,{0x00, 0x00, 0x42, 0x7f, 0x40, 0x00} // 31 1
,{0x00, 0x42, 0x61, 0x51, 0x49, 0x46} // 32 2
,{0x00, 0x21, 0x41, 0x45, 0x4b, 0x31} // 33 3
,{0x00, 0x18, 0x14, 0x12, 0x7f, 0x10} // 34 4
,{0x00, 0x27, 0x45, 0x45, 0x45, 0x39} // 35 5
,{0x00, 0x3c, 0x4a, 0x49, 0x49, 0x30} // 36 6
,{0x00, 0x01, 0x71, 0x09, 0x05, 0x03} // 37 7
,{0x00, 0x36, 0x49, 0x49, 0x49, 0x36} // 38 8
,{0x00, 0x06, 0x49, 0x49, 0x29, 0x1e} // 39 9
,{0x00, 0x00, 0x36, 0x36, 0x00, 0x00} // 3a :
,{0x00, 0x00, 0x56, 0x36, 0x00, 0x00} // 3b ;
,{0x00, 0x08, 0x14, 0x22, 0x41, 0x00} // 3c <
,{0x00, 0x14, 0x14, 0x14, 0x14, 0x14} // 3d =
,{0x00, 0x00, 0x41, 0x22, 0x14, 0x08} // 3e >
,{0x00, 0x02, 0x01, 0x51, 0x09, 0x06} // 3f ?
,{0x00, 0x32, 0x49, 0x79, 0x41, 0x3e} // 40 @
,{0x00, 0x7e, 0x11, 0x11, 0x11, 0x7e} // 41 A
,{0x00, 0x7f, 0x49, 0x49, 0x49, 0x36} // 42 B
,{0x00, 0x3e, 0x41, 0x41, 0x41, 0x22} // 43 C
,{0x00, 0x7f, 0x41, 0x41, 0x22, 0x1c} // 44 D
,{0x00, 0x7f, 0x49, 0x49, 0x49, 0x41} // 45 E
,{0x00, 0x7f, 0x09, 0x09, 0x09, 0x01} // 46 F
,{0x00, 0x3e, 0x41, 0x49, 0x49, 0x7a} // 47 G
,{0x00, 0x7f, 0x08, 0x08, 0x08, 0x7f} // 48 H
,{0x00, 0x00, 0x41, 0x7f, 0x41, 0x00} // 49 I
,{0x00, 0x20, 0x40, 0x41, 0x3f, 0x01} // 4a J
,{0x00, 0x7f, 0x08, 0x14, 0x22, 0x41} // 4b K
,{0x00, 0x7f, 0x40, 0x40, 0x40, 0x40} // 4c L
,{0x00, 0x7f, 0x02, 0x0c, 0x02, 0x7f} // 4d M
,{0x00, 0x7f, 0x04, 0x08, 0x10, 0x7f} // 4e N
,{0x00, 0x3e, 0x41, 0x41, 0x41, 0x3e} // 4f O
,{0x00, 0x7f, 0x09, 0x09, 0x09, 0x06} // 50 P
,{0x00, 0x3e, 0x41, 0x51, 0x21, 0x5e} // 51 Q
,{0x00, 0x7f, 0x09, 0x19, 0x29, 0x46} // 52 R
,{0x00, 0x46, 0x49, 0x49, 0x49, 0x31} // 53 S
,{0x00, 0x01, 0x01, 0x7f, 0x01, 0x01} // 54 T
,{0x00, 0x3f, 0x40, 0x40, 0x40, 0x3f} // 55 U
,{0x00, 0x1f, 0x20, 0x40, 0x20, 0x1f} // 56 V
,{0x00, 0x3f, 0x40, 0x38, 0x40, 0x3f} // 57 W
,{0x00, 0x63, 0x14, 0x08, 0x14, 0x63} // 58 X
,{0x00, 0x07, 0x08, 0x70, 0x08, 0x07} // 59 Y
,{0x00, 0x61, 0x51, 0x49, 0x45, 0x43} // 5a Z
,{0x00, 0x00, 0x7f, 0x41, 0x41, 0x00} // 5b [
,{0x00, 0x02, 0x04, 0x08, 0x10, 0x20} // 5c '\'
,{0x00, 0x00, 0x41, 0x41, 0x7f, 0x00} // 5d ]
,{0x00, 0x04, 0x02, 0x01, 0x02, 0x04} // 5e ^
,{0x00, 0x40, 0x40, 0x40, 0x40, 0x40} // 5f _
,{0x00, 0x00, 0x01, 0x02, 0x04, 0x00} // 60 `
,{0x00, 0x20, 0x54, 0x54, 0x54, 0x78} // 61 a
,{0x00, 0x7f, 0x48, 0x44, 0x44, 0x38} // 62 b
,{0x00, 0x38, 0x44, 0x44, 0x44, 0x20} // 63 c
,{0x00, 0x38, 0x44, 0x44, 0x48, 0x7f} // 64 d
,{0x00, 0x38, 0x54, 0x54, 0x54, 0x18} // 65 e
,{0x00, 0x08, 0x7e, 0x09, 0x01, 0x02} // 66 f
,{0x00, 0x0c, 0x52, 0x52, 0x52, 0x3e} // 67 g
,{0x00, 0x7f, 0x08, 0x04, 0x04, 0x78} // 68 h
,{0x00, 0x00, 0x44, 0x7d, 0x40, 0x00} // 69 i
,{0x00, 0x20, 0x40, 0x44, 0x3d, 0x00} // 6a j
,{0x00, 0x7f, 0x10, 0x28, 0x44, 0x00} // 6b k
,{0x00, 0x00, 0x41, 0x7f, 0x40, 0x00} // 6c l
,{0x00, 0x7c, 0x04, 0x18, 0x04, 0x78} // 6d m
,{0x00, 0x7c, 0x08, 0x04, 0x04, 0x78} // 6e n
,{0x00, 0x38, 0x44, 0x44, 0x44, 0x38} // 6f o
,{0x00, 0x7c, 0x14, 0x14, 0x14, 0x08} // 70 p
,{0x00, 0x08, 0x14, 0x14, 0x18, 0x7c} // 71 q
,{0x00, 0x7c, 0x08, 0x04, 0x04, 0x08} // 72 r
,{0x00, 0x48, 0x54, 0x54, 0x54, 0x20} // 73 s
,{0x00, 0x04, 0x3f, 0x44, 0x40, 0x20} // 74 t
,{0x00, 0x3c, 0x40, 0x40, 0x20, 0x7c} // 75 u
,{0x00, 0x1c, 0x20, 0x40, 0x20, 0x1c} // 76 v
,{0x00, 0x3c, 0x40, 0x30, 0x40, 0x3c} // 77 w
,{0x00, 0x44, 0x28, 0x10, 0x28, 0x44} // 78 x
,{0x00, 0x0c, 0x50, 0x50, 0x50, 0x3c} // 79 y
,{0x00, 0x44, 0x64, 0x54, 0x4c, 0x44} // 7a z
,{0x00, 0x00, 0x08, 0x36, 0x41, 0x00} // 7b {
,{0x00, 0x00, 0x00, 0x7f, 0x00, 0x00} // 7c |
,{0x00, 0x00, 0x41, 0x36, 0x08, 0x00} // 7d }
,{0x00, 0x10, 0x08, 0x08, 0x10, 0x08} // 7e ~
,{0x00, 0x78, 0x46, 0x41, 0x46, 0x78} // 7f DEL
};


#endif /* INC_N5110LCD_H_ */
